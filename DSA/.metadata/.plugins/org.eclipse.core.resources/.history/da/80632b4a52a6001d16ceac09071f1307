package com.ques;

public class Solution540 {
	
	// this method will return the index of the single element...
//	public int recFun(int[] arr,int start,int end) {
//		if (start==end) {
//			return start;
//		}
//		int mid=(start+end)/2;
//		int pair_index;
//		
//		// let's find out the pair index...
//		if (arr[mid]==arr[mid+1]) {
//			pair_index=mid+1;
//		}else if (arr[mid]==arr[mid-1]) {
//			pair_index=mid;
//		}else {
//			return arr[mid];
//		}
//		int ind;
//				
//		// Check whether the pair index is even or odd.
//		if (pair_index%2==0) {
//			ind =recFun(int[] arr,int start, int mid);
//					
//		}
//				 
//		
//		
//	}
	
	public static int binarySearch(int arr[], int first, int last){  
		
        if (last==first){  
            
        }  
        if (arr[mid] > key){  
            return binarySearch(arr, first, mid-1, key);//search in left subarray  
        }else{  
            return binarySearch(arr, mid+1, last, key);//search in right subarray  
        }  
 
        return -1;  
    }  
	

	public static int singleNonDuplicate(int[] nums) {
		int mid=nums.length/2;
		int mid2=
		int pair_index;
		int ind;
		
		
		
	 }
	public static void main(String[] args) {
		System.out.println("Code is running");
		int[] arr= {1,1,2,2,3,4,4,5,5};
		System.out.println(singleNonDuplicate(arr));
	}
}
